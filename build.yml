# The init part is run first. It looks for plugins to load (in order, but order
# in this example does not really matter).
init:
  plugins:
    - mocha
    - packagejson
    - clean
# It is the place to set plugins variables. Plugins can add extra key=value
# settings, as for Mocha where 'bin' and 'useCoffee'. Mocha options are modified
# accordingly. The special 'env' can be overridden to add new environment variables.
# We tell 'clean' package to remove 'lib' globally. We need to rebuild all each time.
settings:
  coffeeBin: './node_modules/.bin/coffee'
  srcPath: 'src'
  libPath: 'lib'
  clean:
    path: ['lib/']
    distclean: ['node_modules']
  mocha:
    useCoffee: true
# You can call shell commands as well. In the build task, %name and %version are
# variables from settings above. They are replaced in place before running command.
build:
  - echo Building %name% version %version% ...
  - '%coffeeBin% -b -c -o %libPath% %srcPath%'
# Sometimes you rely on other tasks, so that is the way you call them.
# Here mocha-test is a rule created by the 'mocha' plugin
test:
  - echo Running test suites...
  - task: mocha-test
# Prepare installation (i.e. install package dependencies)
prepare:
  - npm i

# Splitted install and install_plugins because building UBS requires these plugins
# to be installed first hand. This build.yml needs them in their expected places.
install:
  - '[ -d node_modules ] || %ubs% prepare'
  - task: build
  - task: install_plugins
install_plugins:
  - echo Copying YAML plugins to %libPath%/plugins/ folder
  - cp -f %srcPath%/plugins/*.yaml %libPath%/plugins/
  - echo Copying JS plugins to %libPath%/plugins/ folder
  - cp -f %srcPath%/plugins/*.js %libPath%/plugins/
